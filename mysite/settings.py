"""
Django settings for mysite project.

Generated by 'django-admin startproject' using Django 1.8.

For more information on this file, see
https://docs.djangoproject.com/en/1.8/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/1.8/ref/settings/
"""

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
import os

BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/1.8/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'test-lms-development-key-not-for-production-use-only'

# Secret Chamber encryption key (generate a new one for production)
SECRET_CHAMBER_KEY = b'J8f5k2L9n3P6q1R4s7T0u9V2x5Y8z1A4b7C0d3F6g9H2'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = [
    'localhost',
    '127.0.0.1',
    '::1',
    'testserver',  # For Django testing
    '*',  # Allow all hosts for development (remove in production)
]


# Application definition

INSTALLED_APPS = (
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'blog.apps.BlogConfig',
    'blog.secret_chamber.apps.SecretChamberConfig',
    
    # Security monitoring apps (install these packages first)
    # 'django_otp',
    # 'django_otp.plugins.otp_totp', 
    # 'django_otp.plugins.otp_static',
    # 'corsheaders',
    # 'csp',
)

MIDDLEWARE = [
    # Core Django middleware
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware', 
    
    # Security monitoring middleware (uncomment after installing dependencies)
    # 'blog.security_middleware.SecurityMonitoringMiddleware',
    
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    
    # Tor detection middleware (uncomment after installing dependencies)  
    # 'blog.security_middleware.TorDetectionMiddleware',
    
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    
    # Authentication monitoring middleware (uncomment after installing dependencies)
    # 'blog.security_middleware.AuthenticationMonitoringMiddleware',
    
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'mysite.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                'blog.context_processors.theme_context',
                'blog.context_processors.available_themes_context',
            ],
        },
    },
]

WSGI_APPLICATION = 'mysite.wsgi.application'


# Database - Optimized Configuration for Performance and Integrity
# https://docs.djangoproject.com/en/1.8/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
        'OPTIONS': {
            'timeout': 30,  # 30 seconds timeout for better concurrency
            'init_command': '''
                PRAGMA journal_mode=WAL;
                PRAGMA synchronous=NORMAL;
                PRAGMA cache_size=1000000;
                PRAGMA temp_store=MEMORY;
                PRAGMA mmap_size=268435456;
                PRAGMA foreign_keys=ON;
                PRAGMA case_sensitive_like=ON;
                PRAGMA automatic_index=ON;
                PRAGMA optimize;
            '''
        }
    }
}

# Database connection pooling and optimization
DATABASE_CONNECTION_POOL_SIZE = 20
DATABASE_MAX_OVERFLOW = 10


# Internationalization
# https://docs.djangoproject.com/en/1.8/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'Europe/Bratislava'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/1.8/howto/static-files/

STATIC_URL = '/static/'
STATIC_ROOT = os.path.join(BASE_DIR, 'static')

# Media files (User uploads)
MEDIA_URL = '/media/'
MEDIA_ROOT = os.path.join(BASE_DIR, 'media')

# File upload settings
FILE_UPLOAD_MAX_MEMORY_SIZE = 10 * 1024 * 1024  # 10 MB
DATA_UPLOAD_MAX_MEMORY_SIZE = 10 * 1024 * 1024  # 10 MB

# Assignment file upload security settings
MAX_ASSIGNMENT_FILE_SIZE = 50 * 1024 * 1024  # 50 MB for source code projects

# File upload security headers
SECURE_CONTENT_TYPE_NOSNIFF = True
SECURE_BROWSER_XSS_FILTER = True

# Default primary key field type
DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

# Authentication settings
LOGIN_URL = '/login/'
LOGIN_REDIRECT_URL = '/courses/'
LOGOUT_REDIRECT_URL = '/'

# =============================================================================
# SECURITY MONITORING CONFIGURATION
# =============================================================================

# Basic security settings (ready to use)
SECURITY_RATE_LIMIT_REQUESTS = 100
SECURITY_RATE_LIMIT_WINDOW = 3600
SECURITY_MAX_FAILED_ATTEMPTS = 5
SECURITY_LOCKOUT_DURATION = 3600
SECURITY_TOR_POLICY = 'log'
SECURITY_SCAN_UPLOADS = True
SECURITY_DASHBOARD_ENABLED = True

# Enhanced password validation
AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
        'OPTIONS': {
            'min_length': 12,  # Enhanced security
        }
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

# Session security (enhanced)
SESSION_COOKIE_HTTPONLY = True
SESSION_COOKIE_SAMESITE = 'Strict'
SESSION_EXPIRE_AT_BROWSER_CLOSE = True
SESSION_COOKIE_AGE = 3600

# CSRF protection (enhanced)
CSRF_COOKIE_HTTPONLY = True
CSRF_COOKIE_SAMESITE = 'Strict'

# Additional security headers
X_FRAME_OPTIONS = 'DENY'
SECURE_REFERRER_POLICY = 'strict-origin-when-cross-origin'

# =============================================================================
# PRODUCTION SECURITY NOTES
# =============================================================================

# For production, also set:
# SECURE_SSL_REDIRECT = True
# SESSION_COOKIE_SECURE = True  
# CSRF_COOKIE_SECURE = True
# SECURE_HSTS_SECONDS = 31536000
# SECURE_HSTS_INCLUDE_SUBDOMAINS = True
# SECURE_HSTS_PRELOAD = True

# =============================================================================
# SECURITY PACKAGES TO INSTALL
# =============================================================================

# Run these commands to install security dependencies:
# pip install django-otp pyotp qrcode[pil]
# pip install django-ratelimit 
# pip install django-cors-headers
# pip install django-csp
# pip install rich tabulate
# pip install django-ipware user-agents
# pip install geoip2 python-whois

# After installing, uncomment the middleware and apps sections above
