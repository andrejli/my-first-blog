# Generated by Django 5.2.6 on 2025-10-24 07:34

import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('blog', '0019_add_recurring_events'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='AlertRule',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('description', models.TextField()),
                ('is_active', models.BooleanField(db_index=True, default=True)),
                ('event_type', models.CharField(blank=True, help_text='Event type to monitor', max_length=50)),
                ('condition_type', models.CharField(choices=[('threshold', 'Threshold'), ('pattern', 'Pattern Match'), ('frequency', 'Frequency'), ('anomaly', 'Anomaly Detection')], max_length=20)),
                ('threshold_value', models.FloatField(blank=True, null=True)),
                ('time_window', models.IntegerField(default=3600, help_text='Time window in seconds')),
                ('alert_severity', models.CharField(choices=[('info', 'Info'), ('warning', 'Warning'), ('error', 'Error'), ('critical', 'Critical')], default='warning', max_length=10)),
                ('email_notifications', models.BooleanField(default=True)),
                ('created_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('last_triggered', models.DateTimeField(blank=True, null=True)),
                ('trigger_count', models.IntegerField(default=0)),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='ThreatIntelligence',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ip_address', models.GenericIPAddressField(db_index=True, unique=True)),
                ('threat_type', models.CharField(choices=[('malicious_ip', 'Malicious IP Address'), ('tor_exit_node', 'Tor Exit Node'), ('bot_network', 'Bot Network'), ('scanner', 'Security Scanner'), ('brute_force', 'Brute Force Source'), ('spam_source', 'Spam Source'), ('phishing', 'Phishing Source'), ('malware', 'Malware Distribution')], db_index=True, max_length=50)),
                ('confidence', models.IntegerField(default=50, help_text='Confidence level (0-100)')),
                ('first_seen', models.DateTimeField(default=django.utils.timezone.now)),
                ('last_seen', models.DateTimeField(db_index=True, default=django.utils.timezone.now)),
                ('source', models.CharField(choices=[('manual', 'Manual Entry'), ('automated', 'Automated Detection'), ('external_feed', 'External Threat Feed'), ('user_report', 'User Report')], default='automated', max_length=20)),
                ('description', models.TextField(blank=True)),
                ('blocked', models.BooleanField(db_index=True, default=False)),
                ('whitelisted', models.BooleanField(db_index=True, default=False)),
                ('country_code', models.CharField(blank=True, max_length=2)),
                ('organization', models.CharField(blank=True, max_length=200)),
                ('details', models.JSONField(blank=True, default=dict)),
            ],
            options={
                'ordering': ['-last_seen'],
            },
        ),
        migrations.CreateModel(
            name='SystemMetrics',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp', models.DateTimeField(db_index=True, default=django.utils.timezone.now)),
                ('metric_type', models.CharField(choices=[('cpu_usage', 'CPU Usage'), ('memory_usage', 'Memory Usage'), ('disk_usage', 'Disk Usage'), ('database_connections', 'Database Connections'), ('active_sessions', 'Active Sessions'), ('request_rate', 'Request Rate'), ('error_rate', 'Error Rate'), ('response_time', 'Response Time'), ('file_uploads', 'File Uploads'), ('login_rate', 'Login Rate')], db_index=True, max_length=50)),
                ('value', models.FloatField(help_text='Metric value (percentage, count, etc.)')),
                ('unit', models.CharField(blank=True, help_text='Unit of measurement', max_length=20)),
                ('details', models.JSONField(blank=True, default=dict)),
            ],
            options={
                'ordering': ['-timestamp'],
                'indexes': [models.Index(fields=['metric_type', 'timestamp'], name='blog_system_metric__51a3fe_idx'), models.Index(fields=['timestamp', 'value'], name='blog_system_timesta_3035fb_idx')],
            },
        ),
        migrations.CreateModel(
            name='AuditLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp', models.DateTimeField(db_index=True, default=django.utils.timezone.now)),
                ('action', models.CharField(choices=[('create', 'Create'), ('read', 'Read'), ('update', 'Update'), ('delete', 'Delete'), ('login', 'Login'), ('logout', 'Logout'), ('export', 'Export'), ('import', 'Import'), ('config_change', 'Configuration Change'), ('permission_change', 'Permission Change')], db_index=True, max_length=20)),
                ('content_type', models.CharField(blank=True, help_text='Model being acted upon', max_length=100)),
                ('object_id', models.CharField(blank=True, help_text='ID of object being acted upon', max_length=50)),
                ('object_repr', models.CharField(blank=True, help_text='String representation of object', max_length=200)),
                ('changes', models.JSONField(blank=True, default=dict, help_text='Before/after values for updates')),
                ('description', models.TextField(help_text='Human-readable description of action')),
                ('ip_address', models.GenericIPAddressField()),
                ('user_agent', models.TextField(blank=True)),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-timestamp'],
                'indexes': [models.Index(fields=['user', 'timestamp'], name='blog_auditl_user_id_e9f11b_idx'), models.Index(fields=['action', 'timestamp'], name='blog_auditl_action_622309_idx'), models.Index(fields=['content_type', 'object_id'], name='blog_auditl_content_e36f96_idx')],
            },
        ),
        migrations.CreateModel(
            name='SecurityEvent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('event_type', models.CharField(choices=[('login_success', 'Successful Login'), ('login_failure', 'Failed Login'), ('login_brute_force', 'Brute Force Attempt'), ('password_change', 'Password Change'), ('account_lockout', 'Account Lockout'), ('suspicious_request', 'Suspicious Request'), ('file_upload', 'File Upload'), ('file_upload_blocked', 'Blocked File Upload'), ('tor_access', 'Tor Network Access'), ('rate_limit_exceeded', 'Rate Limit Exceeded'), ('csrf_failure', 'CSRF Token Failure'), ('path_traversal', 'Path Traversal Attempt'), ('sql_injection', 'SQL Injection Attempt'), ('xss_attempt', 'XSS Attempt'), ('admin_access', 'Admin Panel Access'), ('privilege_escalation', 'Privilege Escalation Attempt'), ('data_export', 'Data Export'), ('configuration_change', 'Configuration Change'), ('system_error', 'System Error'), ('security_scan', 'Security Scan Detected')], db_index=True, max_length=50)),
                ('severity', models.CharField(choices=[('low', 'Low'), ('medium', 'Medium'), ('high', 'High'), ('critical', 'Critical')], db_index=True, default='medium', max_length=10)),
                ('timestamp', models.DateTimeField(db_index=True, default=django.utils.timezone.now)),
                ('session_key', models.CharField(blank=True, db_index=True, max_length=40)),
                ('ip_address', models.GenericIPAddressField(db_index=True)),
                ('user_agent', models.TextField(blank=True)),
                ('referer', models.URLField(blank=True)),
                ('request_method', models.CharField(blank=True, max_length=10)),
                ('request_path', models.CharField(blank=True, db_index=True, max_length=500)),
                ('request_params', models.TextField(blank=True, help_text='GET/POST parameters (sanitized)')),
                ('message', models.TextField(help_text='Human-readable event description')),
                ('details', models.JSONField(blank=True, default=dict, help_text='Additional event metadata')),
                ('country_code', models.CharField(blank=True, max_length=2)),
                ('city', models.CharField(blank=True, max_length=100)),
                ('response_code', models.IntegerField(blank=True, null=True)),
                ('blocked', models.BooleanField(default=False, help_text='Was this request blocked?')),
                ('investigated', models.BooleanField(db_index=True, default=False)),
                ('false_positive', models.BooleanField(default=False)),
                ('notes', models.TextField(blank=True, help_text='Investigation notes')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-timestamp'],
                'indexes': [models.Index(fields=['timestamp', 'severity'], name='blog_securi_timesta_bee049_idx'), models.Index(fields=['event_type', 'timestamp'], name='blog_securi_event_t_8de62c_idx'), models.Index(fields=['ip_address', 'timestamp'], name='blog_securi_ip_addr_7624f1_idx'), models.Index(fields=['user', 'event_type'], name='blog_securi_user_id_74121b_idx')],
            },
        ),
    ]
