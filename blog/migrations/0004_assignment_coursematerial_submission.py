# Generated by Django 5.2.6 on 2025-10-03 06:07

import blog.models
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('blog', '0003_alter_course_instructor'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Assignment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField()),
                ('instructions', models.TextField(blank=True, help_text='Detailed assignment instructions')),
                ('due_date', models.DateTimeField()),
                ('max_points', models.PositiveIntegerField(default=100)),
                ('file_attachment', models.FileField(blank=True, help_text='Optional assignment file', upload_to=blog.models.assignment_upload_path)),
                ('allow_file_submission', models.BooleanField(default=True)),
                ('allow_text_submission', models.BooleanField(default=True)),
                ('created_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('is_published', models.BooleanField(default=False)),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='blog.course')),
            ],
            options={
                'ordering': ['course', 'due_date'],
            },
        ),
        migrations.CreateModel(
            name='CourseMaterial',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField(blank=True)),
                ('file', models.FileField(upload_to=blog.models.course_material_upload_path)),
                ('material_type', models.CharField(choices=[('pdf', 'PDF Document'), ('doc', 'Word Document'), ('ppt', 'Presentation'), ('image', 'Image'), ('video', 'Video'), ('audio', 'Audio'), ('other', 'Other')], default='other', max_length=20)),
                ('uploaded_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('is_required', models.BooleanField(default=False, help_text='Required for course completion')),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='blog.course')),
                ('lesson', models.ForeignKey(blank=True, help_text='Optional: attach to specific lesson', null=True, on_delete=django.db.models.deletion.CASCADE, to='blog.lesson')),
            ],
        ),
        migrations.CreateModel(
            name='Submission',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text_submission', models.TextField(blank=True)),
                ('file_submission', models.FileField(blank=True, upload_to=blog.models.submission_upload_path)),
                ('submitted_date', models.DateTimeField(blank=True, null=True)),
                ('status', models.CharField(choices=[('draft', 'Draft'), ('submitted', 'Submitted'), ('graded', 'Graded'), ('returned', 'Returned')], default='draft', max_length=20)),
                ('grade', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('feedback', models.TextField(blank=True)),
                ('graded_date', models.DateTimeField(blank=True, null=True)),
                ('assignment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='blog.assignment')),
                ('student', models.ForeignKey(limit_choices_to={'userprofile__role': 'student'}, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'unique_together': {('student', 'assignment')},
            },
        ),
    ]
