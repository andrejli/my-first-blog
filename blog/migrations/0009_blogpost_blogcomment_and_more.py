# Generated by Django 5.2.6 on 2025-10-16 06:14

import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('blog', '0008_sitetheme_userthemepreference'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='BlogPost',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('slug', models.SlugField(max_length=200, unique=True)),
                ('content', models.TextField(help_text='Supports Obsidian markdown: [[links]], callouts, math equations')),
                ('excerpt', models.TextField(blank=True, help_text='Brief description of the post', max_length=300)),
                ('status', models.CharField(choices=[('draft', 'Draft'), ('published', 'Published'), ('archived', 'Archived')], default='draft', max_length=20)),
                ('featured_image', models.ImageField(blank=True, null=True, upload_to='blog_images/')),
                ('created_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_date', models.DateTimeField(auto_now=True)),
                ('published_date', models.DateTimeField(blank=True, null=True)),
                ('allow_comments', models.BooleanField(default=True)),
                ('view_count', models.PositiveIntegerField(default=0)),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='blog_posts', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-published_date', '-created_date'],
            },
        ),
        migrations.CreateModel(
            name='BlogComment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.TextField(help_text='Share your thoughts on this blog post', max_length=1000)),
                ('is_approved', models.BooleanField(default=True, help_text='Approved comments are visible to all users')),
                ('is_flagged', models.BooleanField(default=False, help_text='Flagged comments require admin review')),
                ('created_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_date', models.DateTimeField(auto_now=True)),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='replies', to='blog.blogcomment')),
                ('post', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comments', to='blog.blogpost')),
            ],
            options={
                'ordering': ['created_date'],
            },
        ),
        migrations.AddIndex(
            model_name='blogpost',
            index=models.Index(fields=['-published_date'], name='blog_blogpo_publish_2a7cdd_idx'),
        ),
        migrations.AddIndex(
            model_name='blogpost',
            index=models.Index(fields=['author', '-published_date'], name='blog_blogpo_author__da2770_idx'),
        ),
        migrations.AddIndex(
            model_name='blogpost',
            index=models.Index(fields=['status'], name='blog_blogpo_status_9c1956_idx'),
        ),
        migrations.AddIndex(
            model_name='blogcomment',
            index=models.Index(fields=['post', 'created_date'], name='blog_blogco_post_id_460e35_idx'),
        ),
        migrations.AddIndex(
            model_name='blogcomment',
            index=models.Index(fields=['author', 'created_date'], name='blog_blogco_author__222a10_idx'),
        ),
        migrations.AddIndex(
            model_name='blogcomment',
            index=models.Index(fields=['is_approved'], name='blog_blogco_is_appr_3ccb35_idx'),
        ),
    ]
